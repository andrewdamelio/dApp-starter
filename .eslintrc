{
  "parser": "babel-eslint",
  "env": {
    "node": true,
    "browser": true,
    "es6": true
  },
  "parserOptions": {
    "ecmaVersion": 6,
    "ecmaFeatures": {
      "experimentalObjectRestSpread": true,
      "jsx": true
    },
    "sourceType": "module"
  },
  "rules": {
    "array-bracket-spacing": [2, "never"],
    "brace-style": [2, "stroustrup", {"allowSingleLine": true}],
    "camelcase": [2, {"properties": "never"}],
    "comma-dangle": [2, "never"],
    "comma-spacing": [2, {"before": false, "after": true}],
    "constructor-super": 2,
    "eol-last": 2,
    "indent": [2, 2, {"SwitchCase": 1}],
    "jsx-quotes": 2,
    "key-spacing": [2, {"beforeColon": false, "afterColon": true}],
    "keyword-spacing": 2,
    "no-alert": 1,
    "no-console": 0,
    "no-debugger": 2,
    "no-dupe-args": 2,
    "no-dupe-keys": 2,
    "no-duplicate-case": 2,
    "no-else-return": 1,
    "no-empty": 2,
    "no-extra-semi": 2,
    "no-func-assign": 1,
    "no-inner-declarations": [2, "both"],
    "no-irregular-whitespace": 2,
    "no-multiple-empty-lines": [1, {"max": 2}],
    "no-redeclare": 2,
    "no-sequences": 2,
    "no-spaced-func": 2,
    "no-shadow": 0,
    "no-trailing-spaces": 2,
    "no-underscore-dangle": 0,
    "no-unneeded-ternary": 2,
    no-mixed-spaces-and-tabs: 2,
    "no-unused-expressions": 2,
    "no-unused-vars": [2, { "argsIgnorePattern": "^_" }],
    "no-use-before-define": [2, "nofunc"],
    "no-var": 2,
    "object-curly-spacing": [2, "always", { "objectsInObjects": false, "arraysInObjects": true }],
    "object-shorthand": [1, "always"],
    "one-var": [2, "never"],
    "padded-blocks": [2, "never"],
    "prefer-const": [1, {
      "destructuring": "all"
    }],
    "quotes": [2, "single", "avoid-escape"],
    "radix": 2,
    "react/jsx-boolean-value": [2, "always"],
    "react/jsx-closing-bracket-location": [2, "line-aligned"],
    "react/jsx-curly-spacing": [2, "never"],
    "react/jsx-equals-spacing": [2, "never"],
    "react/jsx-handler-names": 2,
    "react/jsx-indent": [2, 2],
    "react/jsx-key": 2,
    "react/jsx-no-duplicate-props": 2,
    "react/jsx-no-undef": 2,
    "react/jsx-pascal-case": 2,
    "react/jsx-sort-props": [0, { "callbacksLast": true, "ignoreCase": true }],
    "react/jsx-space-before-closing": 2,
    "react/jsx-uses-react": 2,
    "react/jsx-uses-vars": 2,
    "react/no-danger": 2,
    "react/no-deprecated": [2],
    "react/no-did-mount-set-state": 2,
    "react/no-did-update-set-state": 2,
    "react/no-direct-mutation-state": 2,
    "react/no-multi-comp": [1, { "ignoreStateless": true }],
    "react/no-unknown-property": 1,
    "react/prefer-es6-class": [2, "always"],
    "react/prop-types": 0,
    "react/react-in-jsx-scope": 2,
    "react/self-closing-comp": 2,
    "react/sort-comp": [1, {
      "order": [
        "static-methods",
        "lifecycle",
        "validatorTypes",
        /^on.+$/,
        /^init.+$/,
        "render",
        "everything-else"
      ],
      "groups": {
        "lifecycle": [
          "displayName",
          "propTypes",
          "contextTypes",
          "childContextTypes",
          "mixins",
          "statics",
          "props",
          "defaultProps",
          "constructor",
          "getDefaultProps",
          "getInitialState",
          "state",
          "getChildContext",
          "componentWillMount",
          "componentDidMount",
          "componentWillReceiveProps",
          "shouldComponentUpdate",
          "componentWillUpdate",
          "componentDidUpdate",
          "componentWillUnmount"
        ]
      }
    }],
    "react/wrap-multilines": 0,
    "semi": [2, "always"],
    "semi-spacing": [2, {"before": false, "after": true}],
    "sort-vars": 1,
    "space-before-function-paren": [2, "never"],
    "space-in-parens": [2, "never"],
    "spaced-comment": [2, "always", { "exceptions": ["-"] }],
    "strict": 0,
    "yoda": [2, "never"]
  },
  "plugins": [
    "react",
    "flowtype"
  ],
  "extends": [
      "plugin:flowtype/recommended",
  ],
  "settings": {
    "react": {
      "version": "15"
    },
    "flowtype": {
      "onlyFilesWithFlowAnnotation": false
    }
  }
}
